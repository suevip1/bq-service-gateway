spring:
  profiles:
    active: routes
  codec:
    #10M
    max-in-memory-size: 10485760
  application:
    name: bq-gateway
  sleuth:
    enabled: true
    http:
      legacy:
    sampler:
      probability: 1
  banner:
    charset: UTF-8
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  messages:
    encoding: UTF-8
  #redis后续改成集群模式
  redis:
    database: 0
    host: localhost
    port: 6379
    password: ''
    #连接超时时间(ms)
    timeout: 3000
    lettuce:
      pool:
        max-active: 20
        max-wait: -1
        max-idle: 8
        min-idle: 2
server:
  port: 8990
  max-http-header-size: 5MB
react:
  netty:
    work-count: 20
feign:
  httpclient:
    enabled: true
  okhttp:
    enabled: false
logging:
  name: ${spring.application.name}
  config: classpath:logback-spring.xml
  basedir: /Users/yoyo-studio/logs/${spring.application.name}/
  format: "%d{yy-MM-dd HH:mm:ss.SSS}[${spring.application.name}][Tid:%X{traceId:-},Sid:%X{spanId:-}][%level][%logger{20}_%M] - %msg%n"
  simple-format: "%m%n"
  file-size: 100MB
  level:
    ROOT: INFO
    org.springframework.boot.actuate*: DEBUG
    org.springframework.boot.actuate*.*: DEBUG
    org.springframework.cloud.sleuth*: DEBUG
    org.springframework.cloud.sleuth*.*: DEBUG

#服务健康检查
management:
  security:
    enabled: false
  health:
    redis:
      enabled: false
    db:
      enabled: false
    diskSpace:
      enabled: false
  endpoints:
    web:
      base-path: /${spring.application.name}/monitor
      exposure:
        include: health,info,loggers
    health:
      #关闭过滤敏感信息
      sensitive: false
  endpoint:
    health:
      show-details: ALWAYS
bq:
  security:
    enc: 0e8a31e0e582a561a5c4d2c6737ba962
    #模拟的加密机
    hsm:
      gm: true
      aes: 63646165396639626630393733636563376633383937623534343932633963636237626332326332303033333861653138396562333232323231666338383064
      rsaPri: 308204bf020100300d06092a864886f70d0101010500048204a9308204a502010002820101009bd6eb95af81056c78c94d056ce868008a115a6adadf2b3002310fcf262b5a5dae705089086d6b6f4f885159953045db0fe86371a3097c9b469eed7e54a053d56be3129d645322a816724e135333e2249b7656cf868799c0e0ce51df6ab7e7ac2ae38f0a22f4cdb96d3c5c632339a9a8f74d1e9a412ef6d8c6fc883b90ed20d2b1702256efb878684dd316abac92d0f4c54d312edf183d1db027243012d9788fce3f87d53a673dbf52b6b365bc812eecb9807c62fee1dd2a1013cf6b46fd1d757eb52513178a5f3449a245e4b128d77f8cd506163789ec4e4cde2ec4971f7921bd26a40803a235ba77dfc3734451058f1e85af7fe4619f62dd9408f6c2016c5d0203010001028201000adabda67ba6b02ec5bbf9ac24d18c3aeb62f98a034c338920c1f390b15f282869c7c3684408c108ac00b9efd42b1c567d856975c70e185a8560f8f84963306ba75bd5d656204f43e76a574353d283901aaef3ad7938952e40ca461c1a660c522adb964135bd98ddaf3cdacf81ead8851f12854ce7b8e273276afbff3021401da8f0823b45699896feb2aaf95f42cef49bc9c32da2b53c0c4823dca165fc24b88f3f20aecfd72a7688fc55c18d710e2d501d0b48ee797bd2b7c8476af8d80b2b6a9e740b6bca1f801bdbb1a02389df0c64e5e699074cba3b89d0c050bc5057668ee945aaeb0d1e7b404c256a8036b1e0d8746fc226b0b5dc210d8ab8b357605902818100c934b3804e2c21ec535a3cf3199973d68dfef777588cd6047607c34c1339bd3a61b5532e9c1681b1038787e73cf0591cc221b995b0b7c98067c84476159c4b5c1834027f4188ea635d0ca169dde1bfc99cedd68cbd074b5654d05b0e55897ff5f48a86d516248316d472829bd2baec2cd53838bf7096e32715fd61d6d745a5a902818100c64773f446bb1fc1dab8773d27138ab7a0e6ac0baed1932d93011f01fef2d900f039488c9f85baa0e90d651fe7b09955dc10f78c63d4ace5324c8354a130d055ba77654b42df4cd8403322b002831c039d14e0f1319e10a7a82d567424726b5c064f38a786167dbf49001b1aadbcbc04eeecbd166dc5593e6f3531f1208699950281810099dc9737928fe511175c762760781c41022ceb88744a9e8ea2c3a4f0d3f2df6579ba7375bd1ee8e63850b7f8787d4367de7c73b2a884a2ae72ae8ecbce12cafe0df417c4c094b6c86d2b6f73c99d0c505c94f3f083ccc42bac87f859a9c78ff6c19dfd258ddd35f18b5c55cc5b055dfd9abf7785cdcf54bd5aef7c9611e0cca102818100b9cfac32773655046ddc00a2264481f2a3ae87fc4acfcb85220622f0d3e2f0c99855964f720ef85e630852841bb3bb7e62c4e3b784b68170283adbb82b767b465b801844f75e1bbd6c2c7f8d424d6bab574181ab863c028f9b632169a5de340e013bac74118c723b184629204f405752a834e2de69f04f39db2d96a7c93b5a2102818100b0d72fccb5d631dc1619a86f7bf34e6f5d93d57114e602a18ee4f168235e900363a5e4f5e9a23662e10c781864dcb51aed69870cf455fbd042928ac445de347b4071cd6b4207616d6c0d3be6061f6ca9dcf907e5f0c979aad97edc59eb73205878cf22429fd286dea2b8e73c2425f5b1109a4dcb568d2e20a649a5f52fc416a7
      rsaPub: 30820122300d06092a864886f70d01010105000382010f003082010a02820101009bd6eb95af81056c78c94d056ce868008a115a6adadf2b3002310fcf262b5a5dae705089086d6b6f4f885159953045db0fe86371a3097c9b469eed7e54a053d56be3129d645322a816724e135333e2249b7656cf868799c0e0ce51df6ab7e7ac2ae38f0a22f4cdb96d3c5c632339a9a8f74d1e9a412ef6d8c6fc883b90ed20d2b1702256efb878684dd316abac92d0f4c54d312edf183d1db027243012d9788fce3f87d53a673dbf52b6b365bc812eecb9807c62fee1dd2a1013cf6b46fd1d757eb52513178a5f3449a245e4b128d77f8cd506163789ec4e4cde2ec4971f7921bd26a40803a235ba77dfc3734451058f1e85af7fe4619f62dd9408f6c2016c5d0203010001
      sm4: 06362799c588d550857ac96b5f87687f
      sm2Pri: 308193020100301306072a8648ce3d020106082a811ccf5501822d0479307702010104208b88c676c6e4b028c02f7ee55906f6fc93935800e2cb43f81566c1d1be5991f7a00a06082a811ccf5501822da144034200044f2b4652e29d9023ce5e2775011ae2ea246ef491f9fa5a0c8689c3b81f3881b3b6dd7e7b84b5e8b784064c548c961f69e40e5123e767e67d4fc74e5a08658384
      sm2Pub: 3059301306072a8648ce3d020106082a811ccf5501822d034200044f2b4652e29d9023ce5e2775011ae2ea246ef491f9fa5a0c8689c3b81f3881b3b6dd7e7b84b5e8b784064c548c961f69e40e5123e767e67d4fc74e5a08658384
  schedule:
    tasks:
      - id: globalCacheRefreshTask
        cron: '0 */1 * * * ?'
        single: false
        releaseDelay: -1
        #最大存活时间(s)
        maxTime: 3600
  channels:
    jwt:
      serviceId: 6e3c6f31b6894254ae0cd887deaf3318
      pubKey: ${bq.security.hsm.rsaPub}
      priKey: ${bq.security.hsm.rsaPri}
      #jwt访问地址
      url: /oauth/token
      #jwk访问地址
      authUrl: /oauth/jwk
      #token过期时间(s)
      connTimeout: 1800
      #刷新token的过期时间(s)
      timeout: 3600

  http:
    rest:
      id: defaultRest
      #连接超时时间
      connTimeout: 1000
      #请求超时时间
      timeout: 3000
      #关闭socket之后延迟关闭http通道的时间(ms)
      soLinger: 1000
      maxConn: 1000
    clients:
      - id: defaultHttp
        connTimeout: 1000
        timeout: 3000
      - id: initHttp
        connTimeout: 1000
        timeout: 2000
      - id: gatewayHttp
        connTimeout: 3000
        timeout: 10000
        #关闭socket之后延迟关闭http通道的时间(ms)
        soLinger: 3000
        maxConn: 2000







